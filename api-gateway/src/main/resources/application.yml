server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - name: CircuitBreaker
          args:
            name: defaultCircuitBreaker
            fallbackUri: forward:/fallback
    config:
      uri: http://config:password@localhost:8888
      fail-fast: true
  security:
    user:
      name: gateway
      password: password

# Rate limiter configuration
resilience4j:
  circuitbreaker:
    instances:
      defaultCircuitBreaker:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
  ratelimiter:
    instances:
      defaultRateLimiter:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 5s
  timelimiter:
    instances:
      defaultTimeLimiter:
        timeoutDuration: 5s

# Eureka client configuration
eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    
# Actuator endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway,prometheus
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true

# Logging configuration
logging:
  level:
    org.springframework.cloud.gateway: INFO
    com.micrologistics.gateway: DEBUG
    reactor.netty: INFO

# Application information
info:
  application:
    name: ${spring.application.name}
    description: MicroLogistics API Gateway
    version: 1.0.0
